@model FuNews.Modals.DTOs.Request.UpdateAccountRequest
@{
    ViewData["Title"] = "Update Account";
    bool isAdmin = ViewBag.IsAdmin ?? false;
}

<h2 class="text-center">Update Account</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}

<form asp-action="Update" method="post">
    <input type="hidden" asp-for="AccountId" />

    <div class="form-group">
        <label asp-for="AccountName">Account Name</label>
        <input asp-for="AccountName" class="form-control" />
        <span asp-validation-for="AccountName" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="AccountEmail">Email</label>
        <input asp-for="AccountEmail" class="form-control" />
        <span asp-validation-for="AccountEmail" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="AccountPassword">Password</label>
        <input asp-for="AccountPassword" type="password" class="form-control" />
        <span asp-validation-for="AccountPassword" class="text-danger"></span>
    </div>

    @if (isAdmin)
    {
        <div class="form-group">
            <label asp-for="AccountRole">Role</label>
            <select asp-for="AccountRole" class="form-control">
                <option value="1" selected="@(Model.AccountRole == 1)">Staff</option>
                <option value="2" selected="@(Model.AccountRole == 2)">Lecturer</option>
                @if (ViewBag.AdminRole != null)
                {
                    <option value="@ViewBag.AdminRole" selected="@(Model.AccountRole == ViewBag.AdminRole)">Admin</option>
                }
            </select>
            <span asp-validation-for="AccountRole" class="text-danger"></span>
        </div>
    }

    <button type="submit" class="btn btn-primary mt-3">Save Change</button>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
